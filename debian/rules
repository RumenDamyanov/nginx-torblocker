#!/usr/bin/make -f

# Define variables
NGINX_VERSION ?= $(shell dpkg-parsechangelog --show-field Version | cut -d- -f1)
DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)
BUILDDIR = obj-$(DEB_HOST_MULTIARCH)
NGINX_SRC = /project/headers/nginx-$(NGINX_VERSION)

# Set the default target
%:
	dh $@

# Override the build target to use nginx module build system
override_dh_auto_build:
	mkdir -p $(BUILDDIR)
	echo "Current working directory: $(shell pwd)"
	echo "Using NGINX_VERSION=$(NGINX_VERSION)"
	echo "Nginx source directory: $(NGINX_SRC)"
	echo "Checking nginx source:"
	ls -l $(NGINX_SRC)/src/core/ || echo "Nginx source not found"

	# Use nginx's module compilation directly
	cd $(NGINX_SRC) && \
	gcc -c -fPIC \
		-I$(NGINX_SRC)/src/core \
		-I$(NGINX_SRC)/src/event \
		-I$(NGINX_SRC)/src/event/modules \
		-I$(NGINX_SRC)/src/os/unix \
		-I$(NGINX_SRC)/objs \
		-I$(NGINX_SRC)/src/http \
		-I$(NGINX_SRC)/src/http/modules \
		-I$(NGINX_SRC)/src/http/modules/perl \
		$(shell pkg-config --cflags libpcre) \
		-o /workspace/$(BUILDDIR)/ngx_http_torblocker_module.o \
		/workspace/src/ngx_http_torblocker_module.c

	gcc -shared \
		-o $(BUILDDIR)/ngx_http_torblocker_module.so \
		$(BUILDDIR)/ngx_http_torblocker_module.o

	echo "Build completed. Contents of $(BUILDDIR):"
	ls -l $(BUILDDIR)/

# Override the clean target to clean up build artifacts
override_dh_auto_clean:
	find $(BUILDDIR) -mindepth 1 -delete || true
	find work_dir -mindepth 1 -delete || true
	rm -rf $(BUILDDIR)
	rm -rf work_dir

override_dh_auto_install:
	echo "==== Installing module ===="
	install -D -m 644 $(BUILDDIR)/ngx_http_torblocker_module.so \
		debian/nginx-torblocker/usr/lib/nginx/modules/ngx_http_torblocker_module.so
